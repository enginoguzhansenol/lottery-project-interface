{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ContractEventPayload = exports.ContractUnknownEventPayload = exports.ContractTransactionResponse = exports.ContractTransactionReceipt = exports.EventLog = void 0;\n// import from provider.ts instead of index.ts to prevent circular dep\n// from EtherscanProvider\nconst provider_js_1 = require(\"../providers/provider.js\");\nconst index_js_1 = require(\"../utils/index.js\");\nclass EventLog extends provider_js_1.Log {\n  interface;\n  fragment;\n  args;\n  constructor(log, iface, fragment) {\n    super(log, log.provider);\n    const args = iface.decodeEventLog(fragment, log.data, log.topics);\n    (0, index_js_1.defineProperties)(this, {\n      args,\n      fragment,\n      interface: iface\n    });\n  }\n  get eventName() {\n    return this.fragment.name;\n  }\n  get eventSignature() {\n    return this.fragment.format();\n  }\n}\nexports.EventLog = EventLog;\nclass ContractTransactionReceipt extends provider_js_1.TransactionReceipt {\n  #iface;\n  constructor(iface, provider, tx) {\n    super(tx, provider);\n    this.#iface = iface;\n  }\n  get logs() {\n    return super.logs.map(log => {\n      const fragment = log.topics.length ? this.#iface.getEvent(log.topics[0]) : null;\n      if (fragment) {\n        return new EventLog(log, this.#iface, fragment);\n      } else {\n        return log;\n      }\n    });\n  }\n}\nexports.ContractTransactionReceipt = ContractTransactionReceipt;\nclass ContractTransactionResponse extends provider_js_1.TransactionResponse {\n  #iface;\n  constructor(iface, provider, tx) {\n    super(tx, provider);\n    this.#iface = iface;\n  }\n  async wait(confirms) {\n    const receipt = await super.wait();\n    if (receipt == null) {\n      return null;\n    }\n    return new ContractTransactionReceipt(this.#iface, this.provider, receipt);\n  }\n}\nexports.ContractTransactionResponse = ContractTransactionResponse;\nclass ContractUnknownEventPayload extends index_js_1.EventPayload {\n  log;\n  constructor(contract, listener, filter, log) {\n    super(contract, listener, filter);\n    (0, index_js_1.defineProperties)(this, {\n      log\n    });\n  }\n  async getBlock() {\n    return await this.log.getBlock();\n  }\n  async getTransaction() {\n    return await this.log.getTransaction();\n  }\n  async getTransactionReceipt() {\n    return await this.log.getTransactionReceipt();\n  }\n}\nexports.ContractUnknownEventPayload = ContractUnknownEventPayload;\nclass ContractEventPayload extends ContractUnknownEventPayload {\n  constructor(contract, listener, filter, fragment, _log) {\n    super(contract, listener, filter, new EventLog(_log, contract.interface, fragment));\n    const args = contract.interface.decodeEventLog(fragment, this.log.data, this.log.topics);\n    (0, index_js_1.defineProperties)(this, {\n      args,\n      fragment\n    });\n  }\n  get eventName() {\n    return this.fragment.name;\n  }\n  get eventSignature() {\n    return this.fragment.format();\n  }\n}\nexports.ContractEventPayload = ContractEventPayload;","map":{"version":3,"names":["provider_js_1","require","index_js_1","EventLog","Log","interface","fragment","args","constructor","log","iface","provider","decodeEventLog","data","topics","defineProperties","eventName","name","eventSignature","format","exports","ContractTransactionReceipt","TransactionReceipt","tx","logs","map","length","getEvent","ContractTransactionResponse","TransactionResponse","wait","confirms","receipt","ContractUnknownEventPayload","EventPayload","contract","listener","filter","getBlock","getTransaction","getTransactionReceipt","ContractEventPayload","_log"],"sources":["/Users/oguzhansenol/Developer/Repositories/lottery-project-interface/node_modules/ethers/src.ts/contract/wrappers.ts"],"sourcesContent":["// import from provider.ts instead of index.ts to prevent circular dep\n// from EtherscanProvider\nimport {\n    Block, Log, TransactionReceipt, TransactionResponse\n} from \"../providers/provider.js\";\nimport { defineProperties, EventPayload } from \"../utils/index.js\";\n\nimport type { EventFragment, Interface, Result } from \"../abi/index.js\";\nimport type { Listener } from \"../utils/index.js\";\nimport type {\n    Provider\n} from \"../providers/index.js\";\n\nimport type { BaseContract } from \"./contract.js\";\nimport type { ContractEventName } from \"./types.js\";\n\n\nexport class EventLog extends Log {\n    readonly interface!: Interface;\n    readonly fragment!: EventFragment;\n    readonly args!: Result;\n\n    constructor(log: Log, iface: Interface, fragment: EventFragment) {\n        super(log, log.provider);\n        const args = iface.decodeEventLog(fragment, log.data, log.topics);\n        defineProperties<EventLog>(this, { args, fragment, interface: iface });\n    }\n\n    get eventName(): string { return this.fragment.name; }\n    get eventSignature(): string { return this.fragment.format(); }\n}\n\nexport class ContractTransactionReceipt extends TransactionReceipt {\n    readonly #iface: Interface;\n\n    constructor(iface: Interface, provider: Provider, tx: TransactionReceipt) {\n        super(tx, provider);\n        this.#iface = iface;\n    }\n\n    get logs(): Array<EventLog | Log> {\n        return super.logs.map((log) => {\n            const fragment = log.topics.length ? this.#iface.getEvent(log.topics[0]): null;\n            if (fragment) {\n                return new EventLog(log, this.#iface, fragment)\n            } else {\n                return log;\n            }\n        });\n    }\n\n}\n\nexport class ContractTransactionResponse extends TransactionResponse {\n    readonly #iface: Interface;\n\n    constructor(iface: Interface, provider: Provider, tx: TransactionResponse) {\n        super(tx, provider);\n        this.#iface = iface;\n    }\n\n    async wait(confirms?: number): Promise<null | ContractTransactionReceipt> {\n        const receipt = await super.wait();\n        if (receipt == null) { return null; }\n        return new ContractTransactionReceipt(this.#iface, this.provider, receipt);\n    }\n}\n\nexport  class ContractUnknownEventPayload extends EventPayload<ContractEventName> {\n    readonly log!: Log;\n\n    constructor(contract: BaseContract, listener: null | Listener, filter: ContractEventName, log: Log) {\n        super(contract, listener, filter);\n        defineProperties<ContractUnknownEventPayload>(this, { log });\n    }\n\n    async getBlock(): Promise<Block> {\n        return await this.log.getBlock();\n    }\n\n    async getTransaction(): Promise<TransactionResponse> {\n        return await this.log.getTransaction();\n    }\n\n    async getTransactionReceipt(): Promise<TransactionReceipt> {\n        return await this.log.getTransactionReceipt();\n    }\n}\n\nexport class ContractEventPayload extends ContractUnknownEventPayload {\n\n    declare readonly fragment: EventFragment;\n    declare readonly log: EventLog;\n    declare readonly args: Result;\n\n    constructor(contract: BaseContract, listener: null | Listener, filter: ContractEventName, fragment: EventFragment, _log: Log) {\n        super(contract, listener, filter, new EventLog(_log, contract.interface, fragment));\n        const args = contract.interface.decodeEventLog(fragment, this.log.data, this.log.topics);\n        defineProperties<ContractEventPayload>(this, { args, fragment });\n    }\n\n    get eventName(): string {\n        return this.fragment.name;\n    }\n\n    get eventSignature(): string {\n        return this.fragment.format();\n    }\n}\n"],"mappings":";;;;;;AAAA;AACA;AACA,MAAAA,aAAA,GAAAC,OAAA;AAGA,MAAAC,UAAA,GAAAD,OAAA;AAYA,MAAaE,QAAS,SAAQH,aAAA,CAAAI,GAAG;EACpBC,SAAS;EACTC,QAAQ;EACRC,IAAI;EAEbC,YAAYC,GAAQ,EAAEC,KAAgB,EAAEJ,QAAuB;IAC3D,KAAK,CAACG,GAAG,EAAEA,GAAG,CAACE,QAAQ,CAAC;IACxB,MAAMJ,IAAI,GAAGG,KAAK,CAACE,cAAc,CAACN,QAAQ,EAAEG,GAAG,CAACI,IAAI,EAAEJ,GAAG,CAACK,MAAM,CAAC;IACjE,IAAAZ,UAAA,CAAAa,gBAAgB,EAAW,IAAI,EAAE;MAAER,IAAI;MAAED,QAAQ;MAAED,SAAS,EAAEK;IAAK,CAAE,CAAC;EAC1E;EAEA,IAAIM,SAASA,CAAA;IAAa,OAAO,IAAI,CAACV,QAAQ,CAACW,IAAI;EAAE;EACrD,IAAIC,cAAcA,CAAA;IAAa,OAAO,IAAI,CAACZ,QAAQ,CAACa,MAAM,EAAE;EAAE;;AAZlEC,OAAA,CAAAjB,QAAA,GAAAA,QAAA;AAeA,MAAakB,0BAA2B,SAAQrB,aAAA,CAAAsB,kBAAkB;EACrD,CAAAZ,KAAM;EAEfF,YAAYE,KAAgB,EAAEC,QAAkB,EAAEY,EAAsB;IACpE,KAAK,CAACA,EAAE,EAAEZ,QAAQ,CAAC;IACnB,IAAI,CAAC,CAAAD,KAAM,GAAGA,KAAK;EACvB;EAEA,IAAIc,IAAIA,CAAA;IACJ,OAAO,KAAK,CAACA,IAAI,CAACC,GAAG,CAAEhB,GAAG,IAAI;MAC1B,MAAMH,QAAQ,GAAGG,GAAG,CAACK,MAAM,CAACY,MAAM,GAAG,IAAI,CAAC,CAAAhB,KAAM,CAACiB,QAAQ,CAAClB,GAAG,CAACK,MAAM,CAAC,CAAC,CAAC,CAAC,GAAE,IAAI;MAC9E,IAAIR,QAAQ,EAAE;QACV,OAAO,IAAIH,QAAQ,CAACM,GAAG,EAAE,IAAI,CAAC,CAAAC,KAAM,EAAEJ,QAAQ,CAAC;OAClD,MAAM;QACH,OAAOG,GAAG;;IAElB,CAAC,CAAC;EACN;;AAjBJW,OAAA,CAAAC,0BAAA,GAAAA,0BAAA;AAqBA,MAAaO,2BAA4B,SAAQ5B,aAAA,CAAA6B,mBAAmB;EACvD,CAAAnB,KAAM;EAEfF,YAAYE,KAAgB,EAAEC,QAAkB,EAAEY,EAAuB;IACrE,KAAK,CAACA,EAAE,EAAEZ,QAAQ,CAAC;IACnB,IAAI,CAAC,CAAAD,KAAM,GAAGA,KAAK;EACvB;EAEA,MAAMoB,IAAIA,CAACC,QAAiB;IACxB,MAAMC,OAAO,GAAG,MAAM,KAAK,CAACF,IAAI,EAAE;IAClC,IAAIE,OAAO,IAAI,IAAI,EAAE;MAAE,OAAO,IAAI;;IAClC,OAAO,IAAIX,0BAA0B,CAAC,IAAI,CAAC,CAAAX,KAAM,EAAE,IAAI,CAACC,QAAQ,EAAEqB,OAAO,CAAC;EAC9E;;AAZJZ,OAAA,CAAAQ,2BAAA,GAAAA,2BAAA;AAeA,MAAcK,2BAA4B,SAAQ/B,UAAA,CAAAgC,YAA+B;EACpEzB,GAAG;EAEZD,YAAY2B,QAAsB,EAAEC,QAAyB,EAAEC,MAAyB,EAAE5B,GAAQ;IAC9F,KAAK,CAAC0B,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,CAAC;IACjC,IAAAnC,UAAA,CAAAa,gBAAgB,EAA8B,IAAI,EAAE;MAAEN;IAAG,CAAE,CAAC;EAChE;EAEA,MAAM6B,QAAQA,CAAA;IACV,OAAO,MAAM,IAAI,CAAC7B,GAAG,CAAC6B,QAAQ,EAAE;EACpC;EAEA,MAAMC,cAAcA,CAAA;IAChB,OAAO,MAAM,IAAI,CAAC9B,GAAG,CAAC8B,cAAc,EAAE;EAC1C;EAEA,MAAMC,qBAAqBA,CAAA;IACvB,OAAO,MAAM,IAAI,CAAC/B,GAAG,CAAC+B,qBAAqB,EAAE;EACjD;;AAlBJpB,OAAA,CAAAa,2BAAA,GAAAA,2BAAA;AAqBA,MAAaQ,oBAAqB,SAAQR,2BAA2B;EAMjEzB,YAAY2B,QAAsB,EAAEC,QAAyB,EAAEC,MAAyB,EAAE/B,QAAuB,EAAEoC,IAAS;IACxH,KAAK,CAACP,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAE,IAAIlC,QAAQ,CAACuC,IAAI,EAAEP,QAAQ,CAAC9B,SAAS,EAAEC,QAAQ,CAAC,CAAC;IACnF,MAAMC,IAAI,GAAG4B,QAAQ,CAAC9B,SAAS,CAACO,cAAc,CAACN,QAAQ,EAAE,IAAI,CAACG,GAAG,CAACI,IAAI,EAAE,IAAI,CAACJ,GAAG,CAACK,MAAM,CAAC;IACxF,IAAAZ,UAAA,CAAAa,gBAAgB,EAAuB,IAAI,EAAE;MAAER,IAAI;MAAED;IAAQ,CAAE,CAAC;EACpE;EAEA,IAAIU,SAASA,CAAA;IACT,OAAO,IAAI,CAACV,QAAQ,CAACW,IAAI;EAC7B;EAEA,IAAIC,cAAcA,CAAA;IACd,OAAO,IAAI,CAACZ,QAAQ,CAACa,MAAM,EAAE;EACjC;;AAlBJC,OAAA,CAAAqB,oBAAA,GAAAA,oBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}