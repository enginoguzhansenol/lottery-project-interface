{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDefaultProvider = void 0;\nconst index_js_1 = require(\"../utils/index.js\");\nconst provider_ankr_js_1 = require(\"./provider-ankr.js\");\nconst provider_alchemy_js_1 = require(\"./provider-alchemy.js\");\nconst provider_cloudflare_js_1 = require(\"./provider-cloudflare.js\");\nconst provider_etherscan_js_1 = require(\"./provider-etherscan.js\");\nconst provider_infura_js_1 = require(\"./provider-infura.js\");\n//import { PocketProvider } from \"./provider-pocket.js\";\nconst provider_quicknode_js_1 = require(\"./provider-quicknode.js\");\nconst provider_fallback_js_1 = require(\"./provider-fallback.js\");\nconst provider_jsonrpc_js_1 = require(\"./provider-jsonrpc.js\");\nconst provider_websocket_js_1 = require(\"./provider-websocket.js\");\nfunction isWebSocketLike(value) {\n  return value && typeof value.send === \"function\" && typeof value.close === \"function\";\n}\nfunction getDefaultProvider(network, options) {\n  if (options == null) {\n    options = {};\n  }\n  if (typeof network === \"string\" && network.match(/^https?:/)) {\n    return new provider_jsonrpc_js_1.JsonRpcProvider(network);\n  }\n  if (typeof network === \"string\" && network.match(/^wss?:/) || isWebSocketLike(network)) {\n    return new provider_websocket_js_1.WebSocketProvider(network);\n  }\n  const providers = [];\n  if (options.alchemy !== \"-\") {\n    try {\n      providers.push(new provider_alchemy_js_1.AlchemyProvider(network, options.alchemy));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  if (options.ankr !== \"-\" && options.ankr != null) {\n    try {\n      providers.push(new provider_ankr_js_1.AnkrProvider(network, options.ankr));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  if (options.cloudflare !== \"-\") {\n    try {\n      providers.push(new provider_cloudflare_js_1.CloudflareProvider(network));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  if (options.etherscan !== \"-\") {\n    try {\n      providers.push(new provider_etherscan_js_1.EtherscanProvider(network, options.etherscan));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  if (options.infura !== \"-\") {\n    try {\n      let projectId = options.infura;\n      let projectSecret = undefined;\n      if (typeof projectId === \"object\") {\n        projectSecret = projectId.projectSecret;\n        projectId = projectId.projectId;\n      }\n      providers.push(new provider_infura_js_1.InfuraProvider(network, projectId, projectSecret));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  /*\n      if (options.pocket !== \"-\") {\n          try {\n              let appId = options.pocket;\n              let secretKey: undefined | string = undefined;\n              let loadBalancer: undefined | boolean = undefined;\n              if (typeof(appId) === \"object\") {\n                  loadBalancer = !!appId.loadBalancer;\n                  secretKey = appId.secretKey;\n                  appId = appId.appId;\n              }\n              providers.push(new PocketProvider(network, appId, secretKey, loadBalancer));\n          } catch (error) { console.log(error); }\n      }\n  */\n  if (options.quicknode !== \"-\") {\n    try {\n      let token = options.quicknode;\n      providers.push(new provider_quicknode_js_1.QuickNodeProvider(network, token));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  (0, index_js_1.assert)(providers.length, \"unsupported default network\", \"UNSUPPORTED_OPERATION\", {\n    operation: \"getDefaultProvider\"\n  });\n  if (providers.length === 1) {\n    return providers[0];\n  }\n  return new provider_fallback_js_1.FallbackProvider(providers);\n}\nexports.getDefaultProvider = getDefaultProvider;","map":{"version":3,"names":["index_js_1","require","provider_ankr_js_1","provider_alchemy_js_1","provider_cloudflare_js_1","provider_etherscan_js_1","provider_infura_js_1","provider_quicknode_js_1","provider_fallback_js_1","provider_jsonrpc_js_1","provider_websocket_js_1","isWebSocketLike","value","send","close","getDefaultProvider","network","options","match","JsonRpcProvider","WebSocketProvider","providers","alchemy","push","AlchemyProvider","error","console","log","ankr","AnkrProvider","cloudflare","CloudflareProvider","etherscan","EtherscanProvider","infura","projectId","projectSecret","undefined","InfuraProvider","quicknode","token","QuickNodeProvider","assert","length","operation","FallbackProvider","exports"],"sources":["/Users/oguzhansenol/Developer/Repositories/lottery-project-interface/node_modules/ethers/src.ts/providers/default-provider.ts"],"sourcesContent":["\nimport { assert } from \"../utils/index.js\";\n\nimport { AnkrProvider } from \"./provider-ankr.js\";\nimport { AlchemyProvider } from \"./provider-alchemy.js\";\nimport { CloudflareProvider } from \"./provider-cloudflare.js\";\nimport { EtherscanProvider } from \"./provider-etherscan.js\";\nimport { InfuraProvider } from \"./provider-infura.js\";\n//import { PocketProvider } from \"./provider-pocket.js\";\nimport { QuickNodeProvider } from \"./provider-quicknode.js\";\n\nimport { FallbackProvider } from \"./provider-fallback.js\";\nimport { JsonRpcProvider } from \"./provider-jsonrpc.js\";\nimport { WebSocketProvider } from \"./provider-websocket.js\";\n\nimport type { AbstractProvider } from \"./abstract-provider.js\";\nimport type { Networkish } from \"./network.js\";\nimport { WebSocketLike } from \"./provider-websocket.js\";\n\nfunction isWebSocketLike(value: any): value is WebSocketLike {\n    return (value && typeof(value.send) === \"function\" &&\n        typeof(value.close) === \"function\");\n}\n\nexport function getDefaultProvider(network: string | Networkish | WebSocketLike, options?: any): AbstractProvider {\n    if (options == null) { options = { }; }\n\n    if (typeof(network) === \"string\" && network.match(/^https?:/)) {\n        return new JsonRpcProvider(network);\n    }\n\n    if (typeof(network) === \"string\" && network.match(/^wss?:/) || isWebSocketLike(network)) {\n        return new WebSocketProvider(network);\n    }\n\n    const providers: Array<AbstractProvider> = [ ];\n\n    if (options.alchemy !== \"-\") {\n        try {\n            providers.push(new AlchemyProvider(network, options.alchemy));\n        } catch (error) { console.log(error); }\n    }\n\n    if (options.ankr !== \"-\" && options.ankr != null) {\n        try {\n            providers.push(new AnkrProvider(network, options.ankr));\n        } catch (error) { console.log(error); }\n    }\n\n    if (options.cloudflare !== \"-\") {\n        try {\n            providers.push(new CloudflareProvider(network));\n        } catch (error) { console.log(error); }\n    }\n\n    if (options.etherscan !== \"-\") {\n        try {\n            providers.push(new EtherscanProvider(network, options.etherscan));\n        } catch (error) { console.log(error); }\n    }\n\n    if (options.infura !== \"-\") {\n        try {\n            let projectId = options.infura;\n            let projectSecret: undefined | string = undefined;\n            if (typeof(projectId) === \"object\") {\n                projectSecret = projectId.projectSecret;\n                projectId = projectId.projectId;\n            }\n            providers.push(new InfuraProvider(network, projectId, projectSecret));\n        } catch (error) { console.log(error); }\n    }\n/*\n    if (options.pocket !== \"-\") {\n        try {\n            let appId = options.pocket;\n            let secretKey: undefined | string = undefined;\n            let loadBalancer: undefined | boolean = undefined;\n            if (typeof(appId) === \"object\") {\n                loadBalancer = !!appId.loadBalancer;\n                secretKey = appId.secretKey;\n                appId = appId.appId;\n            }\n            providers.push(new PocketProvider(network, appId, secretKey, loadBalancer));\n        } catch (error) { console.log(error); }\n    }\n*/\n    if (options.quicknode !== \"-\") {\n        try {\n            let token = options.quicknode;\n            providers.push(new QuickNodeProvider(network, token));\n        } catch (error) { console.log(error); }\n    }\n\n    assert(providers.length, \"unsupported default network\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"getDefaultProvider\"\n    });\n\n    if (providers.length === 1) { return providers[0]; }\n\n    return new FallbackProvider(providers);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}