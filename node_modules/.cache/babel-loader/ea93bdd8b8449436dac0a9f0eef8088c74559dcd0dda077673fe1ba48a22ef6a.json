{"ast":null,"code":"var _jsxFileName = \"/Users/oguzhansenol/Developer/Repositories/lottery-project-interface/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n// Import your contract's ABI\nimport contractABI from './lottoAbi.json';\n\n// Define your contract's address here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = '0x1a76e97C017db0D802123101F953D005B80bd951';\nexport default function DepositEther() {\n  _s();\n  const [amount, setAmount] = useState('');\n\n  // Create a provider\n  let provider;\n  if (window.ethereum) {\n    provider = new ethers.providers.Web3Provider(window.ethereum);\n  } else {\n    // Handle the case where the user doesn't have Metamask installed\n    console.error('Please install Metamask');\n    return;\n  }\n\n  // Create a contract instance\n  const contract = new ethers.Contract(contractAddress, contractABI, provider);\n  async function depositEther(event) {\n    event.preventDefault();\n    if (window.web3) {\n      try {\n        const provider = Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(lottoAddress, lottoAbi, signer);\n        var a = await contract.depositEther({\n          value: ethers.parseEther(amount)\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      alert(\"Change the error\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Amount\",\n      value: amount,\n      onChange: e => setAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: deposit,\n      children: \"Deposit Ether\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(DepositEther, \"bZHaZdBRaKnkQpBOPbUIgu3hW48=\");\n_c = DepositEther;\nvar _c;\n$RefreshReg$(_c, \"DepositEther\");","map":{"version":3,"names":["React","useState","ethers","TextField","Button","contractABI","jsxDEV","_jsxDEV","contractAddress","DepositEther","_s","amount","setAmount","provider","window","ethereum","providers","Web3Provider","console","error","contract","Contract","depositEther","event","preventDefault","web3","signer","getSigner","lottoAddress","lottoAbi","a","value","parseEther","alert","children","label","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","onClick","deposit","_c","$RefreshReg$"],"sources":["/Users/oguzhansenol/Developer/Repositories/lottery-project-interface/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n// Import your contract's ABI\nimport contractABI from './lottoAbi.json';\n\n// Define your contract's address here\nconst contractAddress = '0x1a76e97C017db0D802123101F953D005B80bd951';\n\n\nexport default function DepositEther() {\n  const [amount, setAmount] = useState('');\n\n  // Create a provider\n  let provider;\n  if (window.ethereum) {\n    provider = new ethers.providers.Web3Provider(window.ethereum);\n  } else {\n    // Handle the case where the user doesn't have Metamask installed\n    console.error('Please install Metamask');\n    return;\n  }\n\n  // Create a contract instance\n  const contract = new ethers.Contract(contractAddress, contractABI, provider);\n\n  async function depositEther(event) {\n    event.preventDefault();\n    if (window.web3) {\n    try {\n        const provider = Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n\n        const contract = new ethers.Contract(lottoAddress, lottoAbi, signer);\n        var a = await contract.depositEther({\n          value: ethers.parseEther(amount)\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      alert(\"Change the error\");\n    }\n  }\n\n  return (\n    <div>\n      <TextField \n        label=\"Amount\" \n        value={amount} \n        onChange={e => setAmount(e.target.value)}\n      />\n      <Button variant=\"contained\" color=\"primary\" onClick={deposit}>\n        Deposit Ether\n      </Button>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AACzC;AACA,OAAOC,WAAW,MAAM,iBAAiB;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAG,4CAA4C;AAGpE,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,IAAIY,QAAQ;EACZ,IAAIC,MAAM,CAACC,QAAQ,EAAE;IACnBF,QAAQ,GAAG,IAAIX,MAAM,CAACc,SAAS,CAACC,YAAY,CAACH,MAAM,CAACC,QAAQ,CAAC;EAC/D,CAAC,MAAM;IACL;IACAG,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAC;IACxC;EACF;;EAEA;EACA,MAAMC,QAAQ,GAAG,IAAIlB,MAAM,CAACmB,QAAQ,CAACb,eAAe,EAAEH,WAAW,EAAEQ,QAAQ,CAAC;EAE5E,eAAeS,YAAYA,CAACC,KAAK,EAAE;IACjCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAIV,MAAM,CAACW,IAAI,EAAE;MACjB,IAAI;QACA,MAAMZ,QAAQ,GAAGI,YAAY,CAACH,MAAM,CAACC,QAAQ,CAAC;QAC9C,MAAMW,MAAM,GAAGb,QAAQ,CAACc,SAAS,CAAC,CAAC;QAEnC,MAAMP,QAAQ,GAAG,IAAIlB,MAAM,CAACmB,QAAQ,CAACO,YAAY,EAAEC,QAAQ,EAAEH,MAAM,CAAC;QACpE,IAAII,CAAC,GAAG,MAAMV,QAAQ,CAACE,YAAY,CAAC;UAClCS,KAAK,EAAE7B,MAAM,CAAC8B,UAAU,CAACrB,MAAM;QACjC,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC,MAAM;MACLc,KAAK,CAAC,kBAAkB,CAAC;IAC3B;EACF;EAEA,oBACE1B,OAAA;IAAA2B,QAAA,gBACE3B,OAAA,CAACJ,SAAS;MACRgC,KAAK,EAAC,QAAQ;MACdJ,KAAK,EAAEpB,MAAO;MACdyB,QAAQ,EAAEC,CAAC,IAAIzB,SAAS,CAACyB,CAAC,CAACC,MAAM,CAACP,KAAK;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACFnC,OAAA,CAACH,MAAM;MAACuC,OAAO,EAAC,WAAW;MAACC,KAAK,EAAC,SAAS;MAACC,OAAO,EAAEC,OAAQ;MAAAZ,QAAA,EAAC;IAE9D;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAChC,EAAA,CA/CuBD,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}